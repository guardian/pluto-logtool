stages:
  - buildntest
  - docker

buildntest:
  image: node:12.18-alpine3.12
  stage: buildntest
  script:
    - apk add git --no-cache
    - sh ./ci-scripts/setup_headers.sh
    - yarn install
    - yarn test
    - yarn compile
  cache:
    key: ${CI_COMMIT_REF_SLUG}-node
    paths:
      - node_modules/
  artifacts:
    paths:
      - build/bundle.js
    reports:
      junit: frontend/junit.xml

docker:
  image: docker:19.03.11
  stage: docker
  services:
    - docker:19.03.11-dind
  script:
    - cd build
    - docker login -u "${DOCKER_USER}" -p "${DOCKER_PAT}"
    - docker build . -t guardianmultimedia/pluto-logtool:$CI_PIPELINE_IID
    - docker push guardianmultimedia/pluto-logtool:$CI_PIPELINE_IID
    - "echo ci_commit_branch: \\\"${CI_COMMIT_BRANCH}\\\" >> build-info.yaml"
    - "echo ci_commit_ref_name: ${CI_COMMIT_REF_NAME} >> build-info.yaml"
    - "echo ci_commit_sha: ${CI_COMMIT_SHA} >> build-info.yaml"
    - "echo ci_commit_timestamp: ${CI_COMMIT_TIMESTAMP} >> build-info.yaml"
    - "echo ci_commit_title: \\\"${CI_COMMIT_TITLE}\\\" >> \"build-info.yaml\""
    - "echo ci_job_url: ${CI_JOB_URL} >> build-info.yaml"
    - "echo ci_project_name: \\\"${CI_PROJECT_NAME}\\\" >> build-info.yaml"
    - "echo ci_merge_request_project_url: \\\"${CI_MERGE_REQUEST_PROJECT_URL}\\\" >> \"build-info.yaml\""
    - "echo ci_merge_request_title: \"${CI_MERGE_REQUEST_TITLE}\" >> \"build-info.yaml\""
    - "echo ci_pipeline_iid: ${CI_PIPELINE_IID} >> build-info.yaml"
    - "echo built_image: guardianmultimedia/pluto-logtool:$CI_PIPELINE_IID >> build-info.yaml"
  artifacts:
    paths:
      - build/build-info.yaml
